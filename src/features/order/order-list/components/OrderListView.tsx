"use client";

import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { useAuth } from "@/services/hooks/useAuth";
import { LoadingSpinner } from "@/components/ui";

import OrderSearchBar from "./OrderSearchBar";
import OrderTable from "./OrderTable";
import OrderListEmpty from "./OrderListEmpty";

// ÏûÑÏãú ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞
const mockOrders = [
  {
    id: "1",
    orderNumber: "ORD-2024-001",
    productId: "prod-001",
    productName: "ÌîÑÎ¶¨ÎØ∏ÏóÑ Ïä§ÌÇ®ÏºÄÏñ¥ ÏÑ∏Ìä∏",
    orderDate: "2024-01-15T10:30:00Z",
    totalAmount: 89000,
    quantity: 2,
    customerName: "ÍπÄÎØºÏàò",
    customerPhone: "010-1234-5678",
    shippingAddress: "ÏÑúÏö∏Ïãú Í∞ïÎÇ®Íµ¨ ÌÖåÌó§ÎûÄÎ°ú 123",
    paymentMethod: "Ïπ¥Îìú",
    shippingFee: 3000,
    discountAmount: 5000,
    status: "Î∞∞ÏÜ°Ï§ë",
    orderNotes: "Î¨∏ ÏïûÏóê ÎÜìÏïÑÏ£ºÏÑ∏Ïöî",
    createdAt: "2024-01-15T10:30:00Z",
    updatedAt: "2024-01-15T14:20:00Z",
  },
  {
    id: "2",
    orderNumber: "ORD-2024-002",
    productId: "prod-002",
    productName: "ÎπÑÌÉÄÎØº C ÏÑ∏Îüº",
    orderDate: "2024-01-14T15:45:00Z",
    totalAmount: 45000,
    quantity: 1,
    customerName: "Ïù¥ÏòÅÌù¨",
    customerPhone: "010-9876-5432",
    shippingAddress: "Î∂ÄÏÇ∞Ïãú Ìï¥Ïö¥ÎåÄÍµ¨ ÏÑºÌÖÄÎ°ú 456",
    paymentMethod: "Í≥ÑÏ¢åÏù¥Ï≤¥",
    shippingFee: 3000,
    discountAmount: 0,
    status: "Î∞∞ÏÜ°ÏôÑÎ£å",
    orderNotes: "",
    createdAt: "2024-01-14T15:45:00Z",
    updatedAt: "2024-01-16T09:30:00Z",
  },
  {
    id: "3",
    orderNumber: "ORD-2024-003",
    productId: "prod-003",
    productName: "ÌïòÏù¥ÎìúÎ†àÏù¥ÌåÖ ÎßàÏä§ÌÅ¨Ìå© 10Îß§",
    orderDate: "2024-01-13T09:15:00Z",
    totalAmount: 32000,
    quantity: 3,
    customerName: "Î∞ïÏ≤†Ïàò",
    customerPhone: "010-5555-7777",
    shippingAddress: "ÎåÄÍµ¨Ïãú Ï§ëÍµ¨ ÎèôÏÑ±Î°ú 789",
    paymentMethod: "Ïπ¥Îìú",
    shippingFee: 0,
    discountAmount: 3000,
    status: "Í≤∞Ï†úÏôÑÎ£å",
    orderNotes: "Îπ†Î•∏ Î∞∞ÏÜ° Î∂ÄÌÉÅÎìúÎ¶ΩÎãàÎã§",
    createdAt: "2024-01-13T09:15:00Z",
    updatedAt: "2024-01-13T09:15:00Z",
  },
  {
    id: "4",
    orderNumber: "ORD-2024-004",
    productId: "prod-004",
    productName: "ÏïàÌã∞ÏóêÏù¥Ïßï ÌÅ¨Î¶º",
    orderDate: "2024-01-12T20:00:00Z",
    totalAmount: 125000,
    quantity: 1,
    customerName: "Ï†ïÏàòÏó∞",
    customerPhone: "010-3333-4444",
    shippingAddress: "Ïù∏Ï≤úÏãú Ïó∞ÏàòÍµ¨ ÏÜ°ÎèÑÍµ≠Ï†úÎ°ú 321",
    paymentMethod: "ÌòÑÍ∏à",
    shippingFee: 3000,
    discountAmount: 10000,
    status: "Ï∑®ÏÜå",
    orderNotes: "Í≥†Í∞ù ÏöîÏ≤≠ÏúºÎ°ú Ï∑®ÏÜå",
    createdAt: "2024-01-12T20:00:00Z",
    updatedAt: "2024-01-13T10:30:00Z",
  },
  {
    id: "5",
    orderNumber: "ORD-2024-005",
    productId: "prod-005",
    productName: "ÏÑ†ÌÅ¨Î¶º SPF50+",
    orderDate: "2024-01-11T11:20:00Z",
    totalAmount: 28000,
    quantity: 2,
    customerName: "ÏµúÎèôÏö±",
    customerPhone: "010-8888-9999",
    shippingAddress: "Í¥ëÏ£ºÏãú ÏÑúÍµ¨ ÏÉÅÎ¨¥ÎåÄÎ°ú 654",
    paymentMethod: "Ïπ¥Îìú",
    shippingFee: 3000,
    discountAmount: 2000,
    status: "Î∞∞ÏÜ°Ï§ÄÎπÑÏ§ë",
    orderNotes: "",
    createdAt: "2024-01-11T11:20:00Z",
    updatedAt: "2024-01-12T08:45:00Z",
  },
];

export default function OrderListView() {
  const [inputValue, setInputValue] = useState(""); // ÏûÖÎ†• ÌïÑÎìúÏùò Í∞í
  const [activeSearchTerm, setActiveSearchTerm] = useState(""); // Ïã§Ï†ú Í≤ÄÏÉâÏóê ÏÇ¨Ïö©ÎêòÎäî Í∞í
  const [filteredOrders, setFilteredOrders] = useState(mockOrders);
  const [isLoading] = useState(false);
  const { isAuthenticated, loading: authLoading } = useAuth();
  const router = useRouter();

  useEffect(() => {
    // üîí Ïù∏Ï¶ù ÌôïÏù∏ Î∞è Î¶¨Îã§Ïù¥Î†âÌä∏
    if (!authLoading && !isAuthenticated) {
      router.push("/login");
    }
  }, [isAuthenticated, authLoading, router]);

  // Ïã§Ï†ú Í≤ÄÏÉâÏñ¥Í∞Ä Î≥ÄÍ≤ΩÎê† ÎïåÎßå ÌïÑÌÑ∞ÎßÅ Ïã§Ìñâ
  useEffect(() => {
    if (!activeSearchTerm.trim()) {
      setFilteredOrders(mockOrders);
    } else {
      const filtered = mockOrders.filter(
        (order) =>
          order.orderNumber
            .toLowerCase()
            .includes(activeSearchTerm.toLowerCase()) ||
          order.productName
            .toLowerCase()
            .includes(activeSearchTerm.toLowerCase()) ||
          order.customerName
            .toLowerCase()
            .includes(activeSearchTerm.toLowerCase())
      );
      setFilteredOrders(filtered);
    }
  }, [activeSearchTerm]);

  if (authLoading) {
    return <LoadingSpinner message="Ïù∏Ï¶ù ÌôïÏù∏ Ï§ë..." />;
  }

  if (!isAuthenticated) {
    return null;
  }

  const handleSearchOrder = (searchKeyword: string) => {
    setActiveSearchTerm(searchKeyword);
  };

  const handleClearSearch = () => {
    setActiveSearchTerm("");
  };

  const isOrderEmpty = !isLoading && filteredOrders.length === 0;
  const isExistOrder = !isLoading && filteredOrders.length > 0;

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold text-gray-900">Ï£ºÎ¨∏ Í¥ÄÎ¶¨</h1>
        </div>
      </div>

      <OrderSearchBar
        searchTerm={inputValue}
        onSearchChange={setInputValue}
        onSearch={handleSearchOrder}
        onClear={handleClearSearch}
      />

      {isLoading && <LoadingSpinner message="Ï£ºÎ¨∏ Î™©Î°ùÏùÑ Î∂àÎü¨Ïò§Îäî Ï§ë..." />}

      {isOrderEmpty && <OrderListEmpty searchTerm={activeSearchTerm} />}

      {/* Ï£ºÎ¨∏ ÌÖåÏù¥Î∏î */}
      {isExistOrder && (
        <OrderTable
          orders={filteredOrders}
          filteredSearchTerm={activeSearchTerm}
        />
      )}
    </div>
  );
}
